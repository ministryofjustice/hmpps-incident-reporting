{
  "root": true,

  "env": {
    "browser": false,
    "node": true,
    "jest": true,
    "jquery": false
  },

  "plugins": ["import", "no-only-tests"],

  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".json"]
      }
    }
  },

  "overrides": [
    {
      "plugins": ["@typescript-eslint"],
      "parser": "@typescript-eslint/parser",
      "files": ["**/*.ts"],
      "excludedFiles": "*.js",
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-use-before-define": 0,
        "class-methods-use-this": 0,
        "no-useless-constructor": 0,
        "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": false }],
        "@typescript-eslint/no-unused-vars": [
          1,
          {
            "argsIgnorePattern": "res|next|^err|_",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/semi": 0,
        "import/no-unresolved": "error",
        "prettier/prettier": [
          "warn",
          {
            "trailingComma": "all",
            "singleQuote": true,
            "printWidth": 120,
            "semi": false
          }
        ],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          // This is not very specific unfortunately
          // {
          //   "selector": "memberLike",
          //   "modifiers": ["private"],
          //   "format": ["camelCase"],
          //   "leadingUnderscore": "allow"
          // },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          // Ignore properties that require quotes
          // See: https://typescript-eslint.io/rules/naming-convention/#ignore-properties-that-require-quotes
          {
            "selector": [
              "classProperty",
              "objectLiteralProperty",
              "typeProperty",
              "classMethod",
              "objectLiteralMethod",
              "typeMethod",
              "accessor",
              "enumMember"
            ],
            "format": null,
            "modifiers": ["requiresQuotes"]
          }
        ]
      }
    }
  ],

  "extends": ["airbnb-base", "plugin:prettier/recommended"],

  "rules": {
    "no-unused-vars": [
      1,
      {
        "argsIgnorePattern": "res|next|^err|_",
        "ignoreRestSiblings": true
      }
    ],
    "no-use-before-define": 0,
    "no-restricted-syntax": ["error", "ForInStatement", "LabeledStatement", "WithStatement"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "semi": 0,
    "import/no-unresolved": "error",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "mjs": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "comma-dangle": ["error", "always-multiline"],
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": ["**/*.test.js", "**/*.test.ts", "**/testutils/**", "cypress.config.ts", "esbuild/**/*"] }
    ],
    "no-only-tests/no-only-tests": "error",
    "prettier/prettier": [
      "warn",
      {
        "trailingComma": "all",
        "singleQuote": true,
        "printWidth": 120,
        "semi": false
      }
    ],
    "no-empty-function": ["error", { "allow": ["constructors", "arrowFunctions"] }]
  },

  "reportUnusedDisableDirectives": true
}
