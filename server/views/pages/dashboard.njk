{% extends "partials/layout.njk" %}

{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "moj/components/date-picker/macro.njk" import mojDatePicker %}
{% from "moj/components/pagination/macro.njk" import mojPagination %}
{% from "macros/accessible-autocomplete/macro.njk" import accessibleAutocomplete %}

{% set pageTitle = applicationName + " - Home" %}

{% block beforeContent %}
  {{ super() }}

  {{ govukBreadcrumbs({
    items: [
      {
        text: "Digital Prison Services",
        href: dpsUrl
      }
    ]
  }) }}
{% endblock %}

{% block content %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {% if errors | length %}
        {{ govukErrorSummary({
          titleText: "There is a problem",
          errorList: errors
        }) }}
      {% endif %}
    </div>
  </div>

  <h1 class="govuk-heading-l">Incident reports</h1>

  {% if permissions.canCreateReport %}
    {% if permissions.canCreateReportInActiveCaseload %}
      {{ govukButton({
        text: "Create an incident report",
        preventDoubleClick: true,
        href: "/create-report",
        isStartButton: true
      }) }}
    {% else %}
      {{ govukWarningText({
        text: "You must use NOMIS to create reports in this establishment",
        iconFallbackText: "Warning"
      }) }}
    {% endif %}
  {% endif %}

  <div class="app-dashboard__search-box govuk-!-padding-3 govuk-!-margin-bottom-5">
    <form method="get" novalidate>

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half-from-desktop">
          {{ govukInput({
            id: "searchID",
            name: "searchID",
            label: {text: "Search an incident number or offender ID"},
            value: formValues.searchID,
            errorMessage: errors | findFieldInGovukErrorSummary("searchID")
          }) }}
        </div>

        <div class="govuk-grid-column-one-quarter-from-desktop">
          {{ mojDatePicker({
            id: "fromDate",
            name: "fromDate",
            label: {text: "Incident date from"},
            value: formValues.fromDate,
            maxDate: todayAsShortDate,
            errorMessage: errors | findFieldInGovukErrorSummary("fromDate"),
            leadingZeros: "true"
          }) }}
        </div>

        <div class="govuk-grid-column-one-quarter-from-desktop">
          {{ mojDatePicker({
            id: "toDate",
            name: "toDate",
            label: {text: "Incident date to"},
            value: formValues.toDate,
            maxDate: todayAsShortDate,
            errorMessage: errors | findFieldInGovukErrorSummary("toDate"),
            leadingZeros: "true"
          }) }}
        </div>
      </div>

      <div class="govuk-grid-row">

        {% if showEstablishmentsFilter %}
          <div class="govuk-grid-column-one-half-from-desktop">
            {{ accessibleAutocomplete({
              id: "location",
              name: "location",
              label: {text: "Establishment"},
              items: establishments | govukSelectInsertDefault("All establishments") | govukSelectSetSelected(formValues.location),
              value: formValues.location or "",
              errorMessage: errors | findFieldInGovukErrorSummary("location")
            }) }}
          </div>
        {% endif %}

        <div class="govuk-grid-column-one-half-from-desktop">
          {{ accessibleAutocomplete({
            id: "incidentType",
            name: "incidentType",
            label: {text: "Incident type"},
            items: incidentTypes | govukSelectInsertDefault("All incident types") | govukSelectSetSelected(formValues.incidentType),
            value: formValues.incidentType or "",
            errorMessage: errors | findFieldInGovukErrorSummary("incidentType")
          }) }}
        </div>

      </div>

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
          {{ govukCheckboxes({
            classes: "govuk-checkboxes--small govuk-checkboxes--inline",
            name: "incidentStatuses",
            id: "incidentStatuses",
            fieldset: {
              legend: {text: statusCheckboxLabel}
            },
            items: statusItems | govukMultipleCheckedItems(formValues.incidentStatuses),
            errorMessage: errors | findFieldInGovukErrorSummary("incidentStatuses")
          }) }}
        </div>
      </div>

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
          <div class="govuk-button-group">
            {{ govukButton({
              text: "Apply filters",
              preventDoubleClick: true,
              type: "submit",
              attributes: {
                "data-test": "filter-submit"
              }
            }) }}

            {% if not noFiltersSupplied %}
              <a href="?incidentStatuses=" class="govuk-link govuk-link--no-visited-state" id="clearFilter">Clear filters</a>
            {% endif %}
          </div>
        </div>
      </div>
    </form>
  </div>

  {% if reports.length > 0 %}

    {% set rows = [] %}
    {% for report in reports %}
      {% set ref %}{{ report.reportReference }}{% endset %}
      {% set description %}
        <div class="app-dashboard__description-cell">
            {{ report.description | escape | nl2br }}
        </div>
      {% endset %}
      {% if showEstablishmentsFilter %}
        {% set rows = (rows.push(
          [
            { html: "<a href='/reports/" + report.id + "'>" + ref + "</a>" },
            { text: typesLookup[report.type] or report.type},
            { text: report.incidentDateAndTime | dateAndTime },
            { html: description },
            { text: establishmentLookup[report.location] or report.location },
            { text: statusLookup[report.status] or report.status }
          ]
        ), rows) %}
      {% else %}
        {% set rows = (rows.push(
          [
            { html: "<a href='/reports/" + report.id + "'>" + ref + "</a>" },
            { text: typesLookup[report.type] or report.type},
            { text: report.incidentDateAndTime | dateAndTime },
            { html: description },
            { text: usersLookup[report.reportedBy].name or report.reportedBy },
            { text: statusLookup[report.status] or report.status }
          ]
        ), rows) %}
      {% endif %}
    {% endfor %}

    <div class="app-sortable-table-container govuk-!-margin-top-4">
      {{ govukTable({
        caption: "Incidents",
        captionClasses: "govuk-visually-hidden",
        classes: "app-sortable-table",
        head: tableHead,
        rows: rows
      }) }}
    </div>

    {{ mojPagination(paginationParams) }}

  {% else %}

    <p>No incident report found.</p>

  {% endif %}

{% endblock %}
